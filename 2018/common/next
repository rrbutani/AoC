#!/usr/bin/env bash

# Expects <name>


function dependencies() {
    return 0
}

langs=(python rust haskell scala elm elixir clojure)

function python() {
    mkdir -p "${1}/Python" && touch "${1}/Python/${2}.py"
    echo "Yay python!"
}

function rust() {
    mkdir -p "${1}/Rust" && touch "${1}/Rust/${2}.rs"
    cat <<-EOF > "${1}/Rust/${2}.rs"
	#!/usr/bin/env rustr
	extern crate aoc;

	#[allow(unused_imports)]
	use aoc::{AdventOfCode, friends::*};

	#[allow(unused_must_use)]
	fn main() {
	    let mut aoc = AdventOfCode::new_with_year(2018, ${3});
	    let input: String = aoc.get_input();

	    println!("{}", input);

	    let p1 = 0;
	    println!("{}", p1);

	    // aoc.submit_p1(p1);

	    let p2 = 0;
	    println!("{}", p2);
	    // aoc.submit_p2(p2);
	}
	EOF

    cat <<-EOF >> "${1}/../Cargo.toml"

	[[bin]]
	name = "day${3}"
	path = "${3}/Rust/${2}.rs"
	EOF

    echo "ferris says hi"
}

function haskell() {
    mkdir -p "${1}/Haskell" && touch "${1}/Haskell/${2}.hs"
    echo "cabal"
}

function scala() {
    mkdir -p "${1}/Scala" && touch "${1}/Scala/${2}.scala"
    echo "watch it clojure"
}

function elm() {
    mkdir -p "${1}/Elm" && touch "${1}/Elm/${2}.elm"
    echo "we r functional"
}

function elixir() {
    mkdir -p "${1}/Elixir" && touch "${1}/Elixir/${2}.exs"
    echo "purple. use cowboy"
}

function clojure() {
    echo "hello"
}

function openEditor() {
    subl "${@}"
}

if [ -z "${1+x}" ]; then
    echo "Give me a name please!"
    exit 2
fi

nom="${1}"

aocDir="$(dirname "$0")/../"
lastDir=$(ls "${aocDir}" | grep -E '^[0-9]{2}$' | sort | tail -1)
day="$(printf "%02d" $((${lastDir##0} + 1)))"
nextDir="${aocDir}/${day}"

mkdir -p "${nextDir}"

dependencies &&
    for lang in "${langs[@]}"; do $lang "${nextDir}" "${nom}" "${day}" || { echo "Something broke! Blame $lang ($?)" && exit 2; } ; done &&
    openEditor "${nextDir}" # && git add "${nextDir}"
